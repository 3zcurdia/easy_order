name: System tests
on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_test
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Increase the amount of inotify watchers
        run: |
          sudo sh -c "echo fs.inotify.max_user_watches=524288 >> /etc/sysctl.conf"
          sudo sysctl -p
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.1
      - name: Install bundler
        run: |
          gem install bundler
          bundle config path vendor/bundle
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems--${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems--
      - name: Install gems
        if: steps.bundler-cache.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3
      - name: Find yarn cache location
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --check-files
      - name: Setup Database
        env:
          RAILS_ENV: test
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          cp config/database.ci.yml config/database.yml
          bundle exec rails db:schema:load
      - name: Run system tests
        env:
          RAILS_ENV: test
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          bundle exec rake assets:precompile
          bundle exec rails test:system
